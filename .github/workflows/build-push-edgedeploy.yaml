name: Build Image and Deploy IoT Edge

on:
  workflow_dispatch:
  push:
    paths:
    - 'source/**'

env:
  ACR_NAME: acrtodosample               # set the name for the Azure Container Registry
  ACR_LOGIN_SERVER: acrtodosample.azurecr.io # fqdn for the Azure Container Registry
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }} # user name for accessing Azure Container Registry
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }} # password for accesing the Azure Container Registry
  IOT_HUB_NAME: "iot-playground-devices-hub"
  LOG_ANALYTICS_SHARED_KEY: ${{ secrets.LOG_ANALYTICS_SHARED_KEY }}
  DEPLOY_BLOBS_MODULE_NAME: "DeployBlobsModule"
  MODULE_CONTAINER_IMAGE_NAME: "deployblobs"
  VERSION: "1.0.${{ github.run_number }}" #SIMPLE VERSIONING
  FILE_VERSION: "1.0.${{ github.run_number }}.0"
  ASSEMBLY_VERSION: "1.0.${{ github.run_number }}.0"

jobs:
  build:  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["amd64", "amd64.debug" ] ## NO CROSS COMPILATION FOR A SIMPLIFIED BUILD PROCESS... 

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: ${{ env.ACR_LOGIN_SERVER }}
        username: ${{ env.ACR_USERNAME }}
        password: ${{ env.ACR_PASSWORD }}
        logout: false
    

    - name: Build and push container image to registry     
      uses: docker/build-push-action@v2
      with:
        context: ./source
        push: true
        tags: ${{ env.ACR_LOGIN_SERVER }}/${{ env.MODULE_CONTAINER_IMAGE_NAME }}:${{ env.VERSION }}-${{ matrix.arch }}
        file: ./source/IoTEdgeDeployBlobs.Module/Dockerfile.${{ matrix.arch }}
        build-args: |
          VERSION=${{ env.VERSION }}
          FILE_VERSION=${{ env.FILE_VERSION }}
          ASSEMBLY_VERSION=${{ env.ASSEMBLY_VERSION }}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v2

    - name: Login for az cli commands 
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Replace Deployment Variables
      uses: microsoft/variable-substitution@v1
      with:
        files: ./edge-deployment/monitor-deployblobs-template.json
      env:
        modulesContent.$edgeAgent.properties.desired.modules.azureMonitor.env.LogAnalyticsSharedKey.value: ${{ env.LOG_ANALYTICS_SHARED_KEY }}
        modulesContent.$edgeAgent.properties.desired.modules.DeployBlobsModule.settings.image: ${{ env.ACR_LOGIN_SERVER }}/${{ env.MODULE_CONTAINER_IMAGE_NAME }}:${{ env.VERSION }}-amd64
        modulesContent.$edgeAgent.properties.desired.runtime.settings.registryCredentials.acrtodosample.address: ${{ env.ACR_LOGIN_SERVER }}
        modulesContent.$edgeAgent.properties.desired.runtime.settings.registryCredentials.acrtodosample.password: ${{ env.ACR_PASSWORD }}
        modulesContent.$edgeAgent.properties.desired.runtime.settings.registryCredentials.acrtodosample.username: ${{ env.ACR_USERNAME }}
        
    - name: IoT Edge Deployment
      run: |
        az extension add --name azure-iot
        az iot edge deployment create --hub-name ${{ env.IOT_HUB_NAME }} --deployment-id "iot-edge-deployblobs-${{ env.VERSION }}" --content ./edge-deployment/monitor-deployblobs-template.json --target-condition "tags.deviceType='Edge'"